plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'dagger.hilt.android.plugin'
    id 'de.mannodermaus.android-junit5'
    id 'androidx.navigation.safeargs'
    id 'kotlin-parcelize'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.nextgendevs.hanchor"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental"   : "true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += [
                    "-Xjvm-default=all",
            ]
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'


    //HILT
    implementation("com.google.dagger:hilt-android:2.39.1")
//    annotationProcessor("com.google.dagger:hilt-android-compiler:2.39.1")
    kapt("com.google.dagger:hilt-android-compiler:2.39.1")

    //lifecycle, view-model and saved-state
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.4.1"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'

    // WORK Kotlin + coroutines
    def work_version = "2.7.1"
    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    //Inject WorkManager with Hilt
    implementation("androidx.hilt:hilt-work:1.0.0")
    kapt("androidx.hilt:hilt-compiler:1.0.0")
//    annotationProcessor("androidx.hilt:hilt-compiler:1.0.0")

    def room_version = "2.4.2"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
//    annotationProcessor ("androidx.room:room-compiler:$room_version")
    kapt("androidx.room:room-compiler:$room_version")

    //GSON
    implementation 'com.google.code.gson:gson:2.8.9'

    //retrofit2
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0'

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:28.3.1')

    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'

    // jetpack navigation component
    def nav_version = "2.4.2"
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")
    implementation "androidx.navigation:navigation-runtime-ktx:$nav_version"

    // material dialogs
    def material_dialogs_version = "3.1.0"
    implementation "com.afollestad.material-dialogs:core:$material_dialogs_version"

    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.8.2")

    def fragment = "1.5.0-alpha05"
    implementation "androidx.fragment:fragment-ktx:$fragment"

    //adding glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    //Shimmer
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    // Android-Image-Cropper
    def android_image_cropper_version = "3.1.1"
    api "com.github.CanHub:Android-Image-Cropper:$android_image_cropper_version"

    def dataStore = "1.0.0"
    implementation "androidx.datastore:datastore-preferences:$dataStore"

    //Shimmer
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    // Junit5
    def junit5 = "5.7.0"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5"

    // MockWebServer
    def mockWebServer = "4.9.1"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockWebServer"

    def espressoCore = "3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCore"

    def espressoRunner = "1.1.0"
    androidTestImplementation "androidx.test:runner:$espressoRunner"

    def espressoRules = "1.4.0"
    androidTestImplementation "androidx.test:rules:$espressoRules"

    def junitKtx = "1.1.3"
    androidTestImplementation "androidx.test.ext:junit-ktx:$junitKtx"
}

// Allow references to generated code
kapt {
    correctErrorTypes true
}